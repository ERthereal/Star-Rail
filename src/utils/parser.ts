import { execSync } from "child_process";
import { existsSync, mkdir, mkdirSync, readdirSync, readFileSync, writeFileSync } from "fs";
import path from "path";

const autogeneratedPath = path.join(__dirname, "..", "..", "resources");
if (existsSync(path.join(autogeneratedPath, "packetIds.json"))) {
    const packetIds = JSON.parse(readFileSync(path.join(autogeneratedPath, "packetIds.json"), "utf8"));
    let packetClass = "export enum PacketIds{\n";
    for (const [key, value] of Object.entries(packetIds)) {
        packetClass += "    " + key + " = " + value + ",\n";
    }
    packetClass += "}\n\n";
    writeFileSync(path.join(autogeneratedPath, "ids.ts"), packetClass);
}

let typeClass = "";
if (!existsSync(path.join(autogeneratedPath, "autogenerated"))) {
    mkdirSync("./resources/autogenerated");
}
execSync("npx protoc --ts_out ./resources/autogenerated --proto_path ./resources/protos ./resources/protos/*");