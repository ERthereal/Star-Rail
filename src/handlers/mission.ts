import { GetMissionDataCsReq, GetMissionDataScRsp, GetMissionEventDataCsReq, GetMissionEventDataScRsp, GetMissionStatusCsReq, GetMissionStatusScRsp } from "../../resources/autogenerated/cs.mission";
import { GetQuestDataCsReq, GetQuestDataScRsp } from "../../resources/autogenerated/cs.quest";
import { PacketContext, RouteManager } from "../network/route";

export class MissionHandler{
    constructor(routeManager: RouteManager){
        routeManager.on(GetMissionStatusCsReq, this.GetMissionStatusCsReq);
        routeManager.on(GetMissionDataCsReq, this.GetMissionDataCsReq);
        routeManager.on(GetMissionEventDataCsReq, this.GetMissionEventDataCsReq);
        routeManager.on(GetQuestDataCsReq, this.GetQuestDataCsReq);
    }

    public GetQuestDataCsReq(context: PacketContext<GetQuestDataCsReq>){
        const rsp = GetQuestDataScRsp.create();
        rsp.retcode = 0;
        rsp.questList = [];
        rsp.takenAchievementLevelList = [];
        rsp.totalAchievementExp = 0;
        context.send(GetQuestDataScRsp, rsp);
    }

    public GetMissionEventDataCsReq(context: PacketContext<GetMissionEventDataCsReq>){
        const rsp = GetMissionEventDataScRsp.create();
        rsp.challengeEventId = 0;
        rsp.retcode = 0;
        rsp.missionEventList = [];
        context.send(GetMissionEventDataScRsp, rsp);
    }

    public GetMissionDataCsReq(context: PacketContext<GetMissionDataCsReq>){
        const rsp = GetMissionDataScRsp.create();
        rsp.retcode = 0;
        rsp.missionList = [];
    }

    public GetMissionStatusCsReq(context: PacketContext<GetMissionStatusCsReq>){
        const rsp = GetMissionStatusScRsp.create();
        rsp.retcode = 0;
        rsp.missionEventStatusList = [];
        rsp.finishedMainMissionIdList = [];
        rsp.subMissionStatusList = [];
        rsp.unfinishedMainMissionIdList = [];
        context.send(GetMissionStatusScRsp, rsp);
    }
    
}