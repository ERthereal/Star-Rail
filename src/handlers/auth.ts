
import { PlayerGetTokenCsReq, PlayerGetTokenScRsp, PlayerLoginCsReq, PlayerLoginScRsp } from "../../resources/autogenerated/cs.player";
import AvatarExcel from "../data/excel";
import { Lineup, Player, PlayerManager } from "../game/players";
import { PacketContext, RouteManager } from "../network/route";



export class AuthHandler {
    constructor(routeManager: RouteManager) {
        routeManager.on(PlayerGetTokenCsReq, this.PlayerGetTokenCsReq);
        routeManager.on(PlayerLoginCsReq, this.PlayerLoginCsReq);
    }

    public PlayerGetTokenCsReq(context: PacketContext<PlayerGetTokenCsReq>) {
        const rsp = PlayerGetTokenScRsp.create();
        rsp.secretKeySeed = BigInt(0);
        rsp.uid = 1;
        context.send(PlayerGetTokenScRsp, rsp);
        context.client.playerUid = 1;
        
    }

    public PlayerLoginCsReq(context: PacketContext<PlayerLoginCsReq>) {
        //Initializing player, ahh this gonna be so much better than playing with crepe <3
        const basicInfo = {
            exp: 0,
            hcoin: 100000,
            level: 60,
            mcoin: 100000,
            nickname: "WindySR",
            scoin: 100000,
            stamina: 1000,
            worldLevel: 8,
        };

        const player = new Player(context.client, basicInfo, AvatarExcel.getAllAsAvatar(), []);
        player.lineups.push(new Lineup(player, "WindySR", [1001], 0, 0, false));
        PlayerManager.players.set(context.client.playerUid, player);
        const rsp = PlayerLoginScRsp.create();
        rsp.retcode = 0;
        rsp.basicInfo = basicInfo;
        rsp.serverTimestampMs = BigInt(Date.now());
        rsp.loginRandom = context.request.loginRandom!;
        rsp.stamina = 1000;
        rsp.isNewPlayer = true;
        rsp.isRelay = false;

        context.send(PlayerLoginScRsp, rsp);
    }
}